@functions{
    public string CamelCase(string str)
    {
        var words = str.Split(new[] { "_", " " }, StringSplitOptions.RemoveEmptyEntries);
        return string.Join(" ", words);
    }
}

<form class="container-sm input-group"
      hx-get="@Url.Action("Index")"
      hx-target="#tbody"
      hx-select="#tbody"
      hx-swap="outerHTML"
      hx-trigger="keyup,change changed delay:500ms"
      hx-replace-url="true">
    <input class="form-control" type="search" name="query" autocomplete="off" value="@ViewBag.Query" />
    <button class="btn btn-primary">Search</button>
</form>

<table class="table table-striped table-hover">
    <caption>Incidents</caption>
    <thead>
        <tr>
            <th></th>
            @foreach (var Column in ViewBag.Incidents.Columns)
            {
                <th>@CamelCase(Column.ToString())</th>
            }
        </tr>
    </thead>
    <tbody id="tbody">
        @foreach (var Row in ViewBag.Incidents.Rows)
        {
            <tr class="relative">
                <th scope="row" class="hidden-cell"><a class="stretched-link" href=@Url.Action("Details", "Incident", new{ nr = Row["nr"] })></a></th>
                @foreach (var Column in ViewBag.Incidents.Columns)
                {
                    @if (!DBNull.Value.Equals(Row[Column]) && Column.DataType == typeof(DateTime))
                    {
                        <td>@Row[Column].ToString("d")</td>
                    }
                    else
                    {
                        <td>@Row[Column]</td>
                    }
                }
            </tr>
        }
        </tbody>
</table>